import { Suspense } from "react";
import Loading from "../loading";
import { getServerSession } from "next-auth/next";
import { prisma } from "../../../../prismaDB";
import { authOptions } from "../../../api/auth/[...nextauth]/route";

export default async function Page() {
  const session = await getServerSession(authOptions);
  const userInfo = await Server_GetUserInfo(session);

  return <Suspense fallback={<Loading />}>{JSON.stringify(userInfo)}</Suspense>;
}

export async function Server_GetUserInfo(session) {
  let res;

  switch (session.user.provider) {
    case "google":
      res = await prisma.googleUser.findUnique({
        where: { email: session.user.email },
        include: {
          address: {
            select: {
              street: true,
              city: true,
              state: true,
              country: true,
              zip: true,
              googleUserId: true,
              id: true,
            },
          },
        },
      });
      break;
    case "facebook":
      res = await prisma.facebookUser.findUnique({
        where: { email: session.user.email },
        include: {
          address: {
            select: {
              street: true,
              city: true,
              state: true,
              country: true,
              zip: true,
              facebookUserId: true,
              id: true,
            },
          },
        },
      });
      break;
    case "credentials":
      res = await prisma.user.findUnique({
        where: { email: session.user.email },
        include: {
          address: {
            select: {
              street: true,
              city: true,
              state: true,
              country: true,
              zip: true,
              userId: true,
              id: true,
            },
          },
        },
      });
      break;
  }
  return res;
}
